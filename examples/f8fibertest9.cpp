//-----------------------------------------------------------------------------------------
// fiber (header only)
// Copyright (C) 2022-23 Fix8 Market Technologies Pty Ltd
//   by David L. Dight
// see https://github.com/fix8mt/fiber
//
// Lightweight header-only stackful per-thread fiber
//		with built-in roundrobin scheduler x86_64 / linux only
//
// Distributed under the Boost Software License, Version 1.0 August 17th, 2003
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
//
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.
//-----------------------------------------------------------------------------------------
#include <iostream>
#include <functional>
#include <deque>
#include <set>
#include <future>
#include <string>
#include <fix8/f8fiber.hpp>

//-----------------------------------------------------------------------------------------
using namespace FIX8;
using namespace std::literals;

//-----------------------------------------------------------------------------------------
struct foo : fiber
{
	foo(const char *str) : fiber(&foo::sub, this) { set_params(str); }

	void sub()
	{
		std::cout << "\tstarting " << this_fiber::name() << '\n';
		for (int ii{}; ii < 5; )
		{
			std::cout << '\t' << this_fiber::name() << ": " << std::dec << ++ii << '\n';
			this_fiber::yield();
		}
		fibers::print();
		std::cout << "\tleaving " << this_fiber::name() << '\n';
	}
};

//-----------------------------------------------------------------------------------------
int main(void)
{
	foo sub_co("sub_co"), sub_co1("sub_co1"), sub_co2("sub_co2");
	for (int ii{}; fibers::has_fibers(); )
	{
		std::cout << "main: " << std::dec << ++ii << '\n';
		sub_co.resume_if();
		this_fiber::yield();
	}
	std::cout << "Exiting from main\n";
	fibers::print();
	return 0;
}
